-- H2 Test Database Schema for EVCS Station Module
-- Compatible with H2 in PostgreSQL mode

-- System Tenant Table (required for foreign keys)
CREATE TABLE IF NOT EXISTS sys_tenant (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    tenant_code VARCHAR(50) UNIQUE NOT NULL,
    tenant_name VARCHAR(100) NOT NULL,
    tenant_type INTEGER DEFAULT 1,
    status INTEGER DEFAULT 1,
    max_users INTEGER,
    max_stations INTEGER,
    max_chargers INTEGER,
    tenant_id BIGINT NOT NULL,
    create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    create_by BIGINT,
    update_by BIGINT,
    deleted INTEGER DEFAULT 0,
    version INTEGER DEFAULT 1,
    PRIMARY KEY (id)
);

-- Charging Station Table
CREATE TABLE IF NOT EXISTS charging_station (
    station_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    tenant_id BIGINT NOT NULL,
    station_code VARCHAR(50) UNIQUE NOT NULL,
    station_name VARCHAR(100) NOT NULL,
    address VARCHAR(200),
    latitude DOUBLE,
    longitude DOUBLE,
    province VARCHAR(20),
    city VARCHAR(20),
    district VARCHAR(20),
    status INTEGER DEFAULT 1,
    total_chargers INTEGER DEFAULT 0,
    available_chargers INTEGER DEFAULT 0,
    charging_chargers INTEGER DEFAULT 0,
    fault_chargers INTEGER DEFAULT 0,
    operator_id BIGINT,
    operator_name VARCHAR(100),
    station_type INTEGER DEFAULT 1,
    contact_person VARCHAR(50),
    contact_phone VARCHAR(20),
    service_time VARCHAR(50),
    parking_fee VARCHAR(200),
    payment_methods VARCHAR(100),
    support_reservation INTEGER DEFAULT 0,
    network_type INTEGER DEFAULT 2,
    last_heartbeat TIMESTAMP,
    image_urls TEXT,
    facilities TEXT,
    create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    create_by BIGINT,
    update_by BIGINT,
    deleted INTEGER DEFAULT 0,
    version INTEGER DEFAULT 1,
    remark TEXT,
    PRIMARY KEY (station_id)
);

-- Charger Table
CREATE TABLE IF NOT EXISTS charger (
    charger_id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    tenant_id BIGINT NOT NULL,
    charger_code VARCHAR(50) UNIQUE NOT NULL,
    charger_name VARCHAR(100) NOT NULL,
    station_id BIGINT NOT NULL,
    station_code VARCHAR(50),
    charger_type INTEGER DEFAULT 1,
    brand VARCHAR(50),
    model VARCHAR(50),
    manufacturer VARCHAR(100),
    production_date DATE,
    operation_date DATE,
    rated_power DECIMAL(8,2),
    input_voltage INTEGER,
    output_voltage_range VARCHAR(50),
    output_current_range VARCHAR(50),
    gun_count INTEGER DEFAULT 1,
    gun_types VARCHAR(100),
    supported_protocols TEXT,
    status INTEGER DEFAULT 1,
    fault_code VARCHAR(20),
    fault_description VARCHAR(200),
    last_heartbeat TIMESTAMP,
    total_charging_sessions BIGINT DEFAULT 0,
    total_charging_energy DECIMAL(12,2) DEFAULT 0,
    total_charging_time BIGINT DEFAULT 0,
    current_session_id VARCHAR(50),
    current_user_id BIGINT,
    charging_start_time TIMESTAMP,
    charged_energy DECIMAL(10,2) DEFAULT 0,
    charged_duration INTEGER DEFAULT 0,
    current_power DECIMAL(8,2),
    current_voltage DECIMAL(8,2),
    current_current DECIMAL(8,2),
    temperature DECIMAL(5,2),
    signal_strength INTEGER,
    firmware_version VARCHAR(50),
    last_maintenance_time TIMESTAMP,
    next_maintenance_time TIMESTAMP,
    enabled INTEGER DEFAULT 1,
    billing_plan_id BIGINT,
    create_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    create_by BIGINT,
    update_by BIGINT,
    deleted INTEGER DEFAULT 0,
    version INTEGER DEFAULT 1,
    remark TEXT,
    PRIMARY KEY (charger_id)
);

-- Create Indexes
CREATE INDEX IF NOT EXISTS idx_station_code ON charging_station(station_code);
CREATE INDEX IF NOT EXISTS idx_station_tenant ON charging_station(tenant_id, status, deleted);
CREATE INDEX IF NOT EXISTS idx_charger_code ON charger(charger_code);
CREATE INDEX IF NOT EXISTS idx_charger_station ON charger(station_id, status, enabled, deleted);
CREATE INDEX IF NOT EXISTS idx_charger_tenant ON charger(tenant_id, status, deleted);

-- Insert default tenant for testing
INSERT INTO sys_tenant (id, tenant_code, tenant_name, tenant_type, status, max_users, max_stations, max_chargers, tenant_id)
VALUES (1, 'SYSTEM', '系统租户', 1, 1, 999999, 999999, 999999, 1);

-- Insert additional test tenant
INSERT INTO sys_tenant (id, tenant_code, tenant_name, tenant_type, status, max_users, max_stations, max_chargers, tenant_id)
VALUES (2, 'TENANT_002', '测试租户2', 2, 1, 100, 50, 200, 2);
