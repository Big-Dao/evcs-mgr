name: Test Environment Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: 'Skip smoke tests'
        required: false
        default: 'false'

jobs:
  test-deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for scripts
      run: |
        chmod +x gradlew
        chmod +x scripts/*.sh

    - name: Build application
      run: ./gradlew build -x test --no-daemon

    - name: Start test environment
      run: |
        export CI=true
        ./scripts/start-test.sh

    - name: Wait for services to be ready
      run: sleep 30

    - name: Run health checks
      run: ./scripts/health-check.sh

    - name: Run smoke tests
      if: github.event.inputs.skip_tests != 'true'
      run: ./scripts/smoke-test.sh

    - name: Collect service logs on failure
      if: failure()
      run: |
        echo "=== Tenant Service Logs ==="
        docker-compose -f docker-compose.test.yml logs tenant-service
        echo ""
        echo "=== Station Service Logs ==="
        docker-compose -f docker-compose.test.yml logs station-service
        echo ""
        echo "=== PostgreSQL Logs ==="
        docker-compose -f docker-compose.test.yml logs postgres

    - name: Upload logs as artifact on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-environment-logs
        path: |
          **/*.log
        retention-days: 7

    - name: Stop test environment
      if: always()
      run: |
        export CI=true
        ./scripts/stop-test.sh

    - name: Clean up Docker resources
      if: always()
      run: |
        docker system prune -f
        docker volume prune -f

  build-docker-images:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build tenant service image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./evcs-tenant/Dockerfile
        push: false
        tags: evcs-tenant:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build station service image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./evcs-station/Dockerfile
        push: false
        tags: evcs-station:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
